package controllers

import (
	"beego_info/models"
	//	"beego_info/models/info"
	"fmt"
	"github.com/astaxie/beego"
	"github.com/googollee/go-socket.io"
)

// SocketController oprations for Socketio
type SocketController struct {
	beego.Controller
}

// URLMapping ...
func (c *SocketController) URLMapping() {
	c.Mapping("Get", c.Get)
}

var StatTopic = models.New()

func (c *SocketController) Socket() {
	sio := socketio.NewSocketIOServer(&socketio.Config{})
	sio.Of("/statistics").On("connect", func(ns *socketio.NameSpace) {
		fmt.Println("connect")
		//	ns.Emit("statistics", "??????")
		go func(ns *socketio.NameSpace) {
			sub := StatTopic.Subscribe()
			defer StatTopic.Unsubscribe(sub)
			for {
				stat := <-sub
				err := ns.Emit("statistics", stat)
				fmt.Println(stat)
				if err != nil {
					return
				}
			}
		}(ns)
	})

	sio.Handle("/socket.io/", sio)
	//return sio
}
